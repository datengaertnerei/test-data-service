# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:  
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    working_directory: /home/circleci/tds
    docker:
      - image: cimg/openjdk:17.0-node
        auth:
          username: $DOCKER_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      # Checkout the code as the first step.
      - checkout
      # setup docker env
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: false      
      # install yarn
      - run:
          name: YarnSetup
          command: curl -o- -L https://yarnpkg.com/install.sh | bash
      # install playwright browser dependencies
      - run:
          name: PlaywrightSetup
          command: npx playwright install-deps
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test
      # login to docker hub
      - run:
          name: DockerLogin
          command: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKER_USER --password-stdin
      # build docker image    
      - run:
          name: DockerBuild
          command: docker build -t datengaertner/test-data-service:latest .
      # push docker image    
      - run:
          name: DockerPush          
          command: docker push datengaertner/test-data-service:latest

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  default: 
    jobs:
      - build-and-test:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^V*/