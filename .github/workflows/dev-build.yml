# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: maven-build

concurrency: build

on:
  push:
    branches: [ develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7
      with:
        disable-sudo: true
        egress-policy: audit #sonarcloud aws generic hostname unfortunately subject to change

    - uses: actions/checkout@6d193bf28034eafb982f37bd894289fe649468fc
      with:
        fetch-depth: '0'
    
    - name: Set up JDK 21
      uses: actions/setup-java@bcfbca5b713b77435aded8de683c7ee5e79f63cb
      with:
        java-version: 21
        distribution: 'temurin'
        
    - name: Cache Maven packages
      uses: actions/cache@81382a721fc89d96eca335d0c3ba33144b2baa9d
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Cache SonarCloud packages
      uses: actions/cache@81382a721fc89d96eca335d0c3ba33144b2baa9d
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    
    # Next step will start build & deploy maven site with additional artifacts for the Maven site
    - name: Build and analyze dev
      run: |
        git config --global user.email "jens.dibbern@gmail.com"
        git config --global user.name "datengaertnerei"
        export OSM_IMPORT_FILE=https://github.com/datengaertnerei/test-data-service/raw/develop/data/osm-small.pbf
        touch ./mvn-build.log
        tail -f ./mvn-build.log &
        ./mvnw -B --log-file ./mvn-build.log deploy site org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dorg.slf4j.simpleLogger.defaultLogLevel=warn -Djdk.instrument.traceUsage
        cp ./mvn-build.log target/site/mvn-build.log.txt
        mkdir ~/site-tmp
        cp -r target/site/* ~/site-tmp
        cp -r target/test-data-service-oas.json ~/site-tmp
        cp -r target/classes/META-INF/sbom/application.cdx.json ~/site-tmp/test-data-service-bom.json
        git stash
        git checkout gh_pages
        cp -r ~/site-tmp/* docs
        git add -A docs
        git commit docs -m "Maven Site generated"
        git push
        rm -rf ~/site-tmp
        git checkout develop
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
    - uses: codecov/codecov-action@2296b6ba9eee85301a5ef2c7c2cdc738faf1f939