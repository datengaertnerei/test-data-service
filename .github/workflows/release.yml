name: maven-release

concurrency: dev-build

on: 
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 2 15 * *'
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@28278524d0a2e042c57b6713ad659f1b2c13c0ac
      with:
        egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

    - uses: actions/checkout@8230315d06ad95c617244d2f265d237a1682d445
    
    - name: Set up JDK 17
      uses: actions/setup-java@3617c43588448d532250f5c331dffcca90e398f1
      with:
        java-version: 17
        distribution: 'temurin'
                
    - name: Create Maven release
      id: mvnrel
      run: |
        git config --global user.email "jens.dibbern@gmail.com"
        git config --global user.name "datengaertnerei"
        export OSM_IMPORT_FILE=https://github.com/datengaertnerei/test-data-service/raw/develop/data/osm-small.pbf
        export MVNVER=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')
        export PRSOURCE="PR-${MVNVER}"
        export RELBRANCH="RB-${MVNVER}"
        echo $RELTAG
        git branch $RELBRANCH
        git checkout $RELBRANCH
        echo "Maven Release Prepare"
        mvn clean release:prepare
        echo "Maven Release Perform"
        mvn release:perform 
        # omit maven release leftovers
        git stash
        # merge tag to main
        git checkout "V${MVNVER}"
        git switch -c $PRSOURCE
        git push origin $PRSOURCE
        # preserve branch and tag info
        echo ::set-output name=release_branch::$RELBRANCH
        echo ::set-output name=releasetag::V${MVNVER}
        echo ::set-output name=prsource::$PRSOURCE
      env:        
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create release
      id: rel
      uses: Roang-zero1/github-create-release-action@8a7dcdd878ff1ccd131f9a9f7099c62248d8cdfc
      with:
        release_title: "Release ${{ steps.mvnrel.outputs.releasetag }}"
        created_tag: ${{ steps.mvnrel.outputs.releasetag }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
                
    - name: Create pull request to main
      id: cpr_main
      run: gh pr create --base $BASE --head $HEAD --title "$TITLE" --body "$BODY"
      env:
        GITHUB_TOKEN: ${{ secrets.REL_SECRET }}
        HEAD: ${{ steps.mvnrel.outputs.prsource }}
        BASE: master
        TITLE: "Merge ${{ steps.mvnrel.outputs.prsource }} to main"
        BODY: ":crown: *An automated PR*"
          
    
    - name: Create pull request to dev
      id: cpr_dev
      run: gh pr create --base $BASE --head $HEAD --title "$TITLE" --body "$BODY"
      env:
        GITHUB_TOKEN: ${{ secrets.REL_SECRET }}
        HEAD: ${{ steps.mvnrel.outputs.release_branch }}
        BASE: develop
        TITLE: "Merge ${{ steps.mvnrel.outputs.release_branch }} to dev"
        BODY: ":crown: *An automated PR*"
