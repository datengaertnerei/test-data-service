# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: maven-release

concurrency: dev-build

on: workflow_dispatch
  #schedule:
    # * is a special character in YAML so you have to quote this string
    #- cron:  '0 12 21 * *'
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@cdea734fa57747b9831aa9d6fcb274c5f9669557
      with:
        egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

    - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
    
    - name: Set up JDK 17
      uses: actions/setup-java@62808131e114cfcd8936127824d1a3f08fb871ab
      with:
        java-version: 17
        distribution: 'temurin'
                
    - name: Create Maven release
      id: mvnrel
      run: |
        git config --global user.email "jens.dibbern@gmail.com"
        git config --global user.name "datengaertnerei"
        export OSM_IMPORT_FILE=https://github.com/datengaertnerei/test-data-service/raw/develop/data/osm-small.pbf
        export MVNVER=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')
        export PRSOURCE="PR-${MVNVER}"
        export RELBRANCH="RB-${MVNVER}"
        echo $RELTAG
        git branch $RELBRANCH
        git checkout $RELBRANCH
        echo "Maven Release Prepare"
        mvn clean release:prepare
        echo "Maven Release Perform"
        mvn release:perform 
        # omit maven release leftovers
        git stash
        # merge tag to main
        git checkout "V${MVNVER}"
        git switch -c $PRSOURCE
        git push origin $PRSOURCE
        # preserve branch and tag info
        echo ::set-output name=release_branch::$RELBRANCH
        echo ::set-output name=releasetag::V${MVNVER}
        echo ::set-output name=prsource::$PRSOURCE
      env:        
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create release
      id: rel
      uses: Roang-zero1/github-create-release-action@5cf058ddffa6fa04e5cda07c98570c757dc4a0e1
      with:
        release_title: "Release ${{ steps.mvnrel.outputs.releasetag }}"
        created_tag: ${{ steps.mvnrel.outputs.releasetag }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
                
    - name: Create pull request to main
      id: cpr_main
      uses: "actions/github-script@v6"
      with:
        github-token: " ${{ secrets.GITHUB_TOKEN }}"
        script: |
          const repo = context.repo.repo;
          const owner = context.repo.owner;

          github.request('POST /repos/{owner}/{repo}/pulls', {
            owner: owner,
            repo: repo,
            title: 'Merge ${{ steps.mvnrel.outputs.prsource }} to main',
            body: ':crown: *An automated PR*',
            head: ${{ steps.mvnrel.outputs.prsource }},
            base: 'master'
          })
    
    - name: Create pull request to dev
      id: cpr_dev
      uses: "actions/github-script@v6"
      with:
        github-token: " ${{ secrets.GITHUB_TOKEN }}"
        script: |
          const repo = context.repo.repo;
          const owner = context.repo.owner;

          github.request('POST /repos/{owner}/{repo}/pulls', {
            owner: owner,
            repo: repo,
            title: 'Merge ${{ steps.mvnrel.outputs.release_branch }} to dev',
            body: ':crown: *An automated PR*',
            head: ${{ steps.mvnrel.outputs.release_branch }},
            base: 'develop'
          })
